{"version":3,"sources":["assets/pad.png","Theme.js","components/Layout.js","components/TopBar.js","components/Section.js","components/Canvas.js","Store.js","components/Panel.js","components/Workspace.js","components/Item.js","components/RocketInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Theme","PRIMARY","BACKGROUND","TEXT","LIGHT","DEFAULT","BORDER","RADIUS","Layout","_ref","children","react_default","a","createElement","style","display","flexDirection","height","background","TopBar","width","color","fontSize","Section","title","to","styles","section","link","href","target","wwd","alignItems","marginLeft","marginRight","cursor","paddingLeft","textDecoration","Store","Mafuba","launches","latitude","longitude","WorldWind","window","renderableLayer","RenderableLayer","Canvas","WorldWindow","addLayer","BMNGOneImageLayer","BMNGLayer","atmosphereLayer","AtmosphereLayer","starFieldLayer","StarFieldLayer","time","Date","lightLocation","SunPosition","getAsGeographicLocation","navigator","range","newProps","_this","this","goTo","Location","data","map","launch","createPad","pad","name","placemarkLayer","placemarkAttributes","PlacemarkAttributes","imageOffset","Offset","OFFSET_FRACTION","labelAttributes","Color","WHITE","offset","position","Position","placemark","Placemark","label","alwaysOnTop","addRenderable","id","Component","Panel","overflow","padding","props","Workspace","inter","Item","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","countdown","_this2","setInterval","getTimeRemaining","source","net","setState","refs","counter","clearInterval","endtime","t","parse","seconds","Math","floor","minutes","hours","days","concat","_this3","date","month","toLocaleString","listStyle","margin","borderRadius","userSelect","outline","tabIndex","onFocus","e","startInterval","onBlur","stopInterval","icon","src","alt","body","location","ref","getUTCFullYear","minWidth","minHeight","maxWidth","maxHeight","justifyContent","defineProperty","fontWeight","RocketInfo","rocket","key","Item_Item","App","document","fontFamily","getUpcomingLaunches","options","method","headers","Access-Control-Request-Method","Access-Control-Allow-Origin","fetch","json","results","Panel_Panel","RocketInfo_RocketInfo","Canvas_Canvas","Boolean","hostname","match","ReactDOM","render","App_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ea0ac27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pad.e8c95dca.png\";","export default {\n  PRIMARY: '#37474f',\n  BACKGROUND: '#dbdbdb',\n  TEXT: {\n    LIGHT: '#ffffff',\n    DEFAULT: '#222324'\n  },\n  BORDER: {\n    RADIUS: 3\n  }\n}\n","import React from 'react'\nimport Theme from '../Theme';\n\nexport default function Layout ({children}) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      background: Theme.BACKGROUND\n    }}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport Theme from '../Theme'\n\nexport default function TopBar ({children}) {\n  return (\n    <div style={{\n      display: 'flex',\n      width: '100%',\n      height: 40,\n      color: Theme.TEXT.LIGHT,\n      background: Theme.PRIMARY,\n      fontSize: 14\n    }}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Section ({title, to}) {\n  return (\n    <div style={styles.section}>\n      <a style={styles.link} href={to} target='_blank'>{title}</a>\n    </div>\n  )\n}\n\nconst styles = {\n  section: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 4,\n    marginRight: 4,\n    height: 40,\n    cursor: 'none',\n    paddingLeft: 32\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none'\n  }\n}\n","import React, { Component } from 'react'\nimport Store from '../Store'\nconst WorldWind = window.WorldWind\nconst renderableLayer = new WorldWind.RenderableLayer()\nlet wwd\n\nexport default class Canvas extends Component {\n  componentDidMount () {\n    wwd = new WorldWind.WorldWindow('scene')\n\n    wwd.addLayer(new WorldWind.BMNGOneImageLayer())\n    wwd.addLayer(new WorldWind.BMNGLayer())\n    wwd.addLayer(renderableLayer)\n\n    // Visual Effects\n    var atmosphereLayer = new WorldWind.AtmosphereLayer()\n    var starFieldLayer = new WorldWind.StarFieldLayer()\n    wwd.addLayer(starFieldLayer)\n    wwd.addLayer(atmosphereLayer)\n    starFieldLayer.time = new Date()\n    atmosphereLayer.lightLocation = WorldWind.SunPosition.getAsGeographicLocation(starFieldLayer.time)\n    wwd.navigator.range = 25000000\n  }\n\n  componentWillReceiveProps (newProps) {\n    wwd.goTo(new WorldWind.Location(Store.data.latitude, Store.data.longitude))\n\n    Store.data.launches.map(launch => {\n      this.createPad(launch.pad.name, launch.pad.latitude, launch.pad.longitude)\n    })\n  }\n\n  createPad (name, latitude, longitude) {\n    var placemarkLayer = new WorldWind.RenderableLayer('Placemark')\n    wwd.addLayer(placemarkLayer)\n    var placemarkAttributes = new WorldWind.PlacemarkAttributes(null)\n\n    placemarkAttributes.imageOffset = new WorldWind.Offset(\n      WorldWind.OFFSET_FRACTION, 0.3,\n      WorldWind.OFFSET_FRACTION, 0.0)\n\n    placemarkAttributes.labelAttributes.color = WorldWind.Color.WHITE\n    placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n      WorldWind.OFFSET_FRACTION, 0.5,\n      WorldWind.OFFSET_FRACTION, 1.0)\n    var position = new WorldWind.Position(latitude, longitude, 100.0)\n    var placemark = new WorldWind.Placemark(position, true, null)\n    placemark.label = name\n    placemark.alwaysOnTop = true\n    placemarkLayer.addRenderable(placemark)\n  }\n\n  render () {\n    return (\n      <canvas\n        id='scene'\n        style={{\n          background: `radial-gradient(\n            #220b2a,\n            #0d0116)`,\n          width: '100%'\n        }} />\n    )\n  }\n}\n","import Mafuba from 'mafuba'\n\nexport default new Mafuba({\n  launches: [],\n  latitude: 0,\n  longitude: 0\n})\n","import React, { Component } from 'react'\nimport Theme from '../Theme'\n\nexport default class Panel extends Component {\n  render () {\n    return (\n      <div style={{\n        width: 500,\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto'\n      }}>\n        <span style={{\n          color: Theme.TEXT.DEFAULT,\n          fontSize: 20,\n          padding: 8\n        }}>{this.props.title}</span>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Theme from '../Theme';\n\nexport default function Workspace ({children}) {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'row',\n      height: '100vh',\n      background: Theme.BACKGROUND\n    }}>\n      {children}\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Theme from '../Theme'\nimport icon from '../assets/pad.png'\nimport Store from '../Store'\nlet inter = null\n\nexport default class Item extends Component {\n  state = {\n    countdown: ''\n  }\n  constructor () {\n    super()\n  }\n\n  startInterval () {\n    inter = setInterval(() => {\n      const countdown = this.getTimeRemaining(this.props.source.net)\n      this.setState({countdown})\n    }, 1000)\n    this.refs.counter.style.display = 'block'\n  }\n\n  stopInterval () {\n    clearInterval(inter)\n    this.refs.counter.style.display = 'none'\n  }\n\n  getTimeRemaining (endtime) {\n    const t = Date.parse(endtime) - Date.parse(new Date())\n    const seconds = Math.floor((t / 1000) % 60)\n    const minutes = Math.floor((t / 1000 / 60) % 60)\n    const hours = Math.floor((t / (1000 * 60 * 60)) % 24)\n    const days = Math.floor(t / (1000 * 60 * 60 * 24))\n    return `${days}d ${hours}h ${minutes}m ${seconds}s`\n  }\n\n  render () {\n    const date = new Date(this.props.source.net)\n    const locale = 'en-us'\n    const month = date.toLocaleString(locale, { month: 'long' })\n    return (\n      <li style={{\n        background: '#fff',\n        listStyle: 'none',\n        padding: 8,\n        margin: 4,\n        borderRadius: Theme.BORDER.RADIUS,\n        display: 'flex',\n        userSelect: 'none',\n        outline: 'none'\n      }}\n        tabIndex= '-1' \n        onFocus={(e) => {\n          this.startInterval()\n          Store.setState({\n            latitude: this.props.source.pad.latitude,\n            longitude: this.props.source.pad.longitude\n          })\n        }}\n        onBlur={(e) => {\n          this.stopInterval()\n        }}\n      >\n        <div style={styles.icon}>\n          <img src={icon} alt='pad' height={48} />\n        </div>\n        <div style={styles.body}>\n          <p style={styles.title}> {this.props.source.name} </p>\n          <p style={styles.location}> {this.props.source.pad.location.name} </p>\n          <p ref='counter' style={styles.countdown}>{this.state.countdown}</p>\n        </div>\n        <div style={styles.date}>\n          <p style={{margin: 0}}>{month}</p>\n          <p style={{margin: 0}}>{date.getUTCFullYear()}</p>\n        </div>\n      </li>\n    )\n  }\n}\n\nconst styles = {\n  title: {\n    margin: 0,\n    padding: 0\n  },\n  body: {\n    width: '100%',\n    padding: 8\n  },\n  location: {\n    margin: 0,\n    padding: 0,\n    fontSize: 12,\n    color: '#444'\n  },\n  date: {\n    minWidth: 64,\n    minHeight: 64,\n    maxWidth: 64,\n    maxHeight: 64,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 14,\n    margin: 0,\n    padding: 0\n  },\n  icon: {\n    minWidth: 64,\n    minHeight: 64,\n    maxWidth: 64,\n    maxHeight: 64,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  countdown: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    color: 'green',\n    display: 'none'\n  }\n}\n","import React, { Component } from 'react'\nimport Item from './Item'\n\nexport default class RocketInfo extends Component {\n  render () {\n    return (\n      <ul style={{margin: 0, padding: 0}}>\n        {this.props.data.map((rocket, key) => {\n          return <Item source={rocket} key={key} />\n        })}\n      </ul>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Layout from './components/Layout'\nimport TopBar from './components/TopBar'\nimport Section from './components/Section'\nimport Canvas from './components/Canvas'\nimport Panel from './components/Panel'\nimport Workspace from './components/Workspace'\nimport Store from './Store'\nimport RocketInfo from './components/RocketInfo'\n\nexport default class App extends Component {\n  componentWillMount () {\n    document.body.style.margin = 0\n    document.body.style.fontFamily = 'sans-serif'\n    Store.link(this)\n    this.getUpcomingLaunches()\n  }\n\n  async getUpcomingLaunches () {\n\n    const options = {\n      method: 'get',\n      headers: {\n        'Access-Control-Request-Method': 'GET',\n        'Access-Control-Allow-Origin': 'https://roccosh.github.io'\n      }\n    }\n    let data = await window.fetch('https://spacelaunchnow.me/3.2.0/launch/upcoming/?format=json&limit=10000', options)\n    data = await data.json()\n    Store.setState({launches: data.results})\n  }\n  render () {\n    return (\n      <Layout>\n        <TopBar>\n          <Section title='Rocco' />\n          <Section title='Rocket SketchFab' to='https://sketchfab.com/models/a4ac66400a6549108f59f014025bd3e7' />\n        </TopBar>\n        <Workspace>\n          <Panel title='Upcoming launches'>\n            <RocketInfo data={Store.data.launches} />\n          </Panel>\n          <Canvas />\n        </Workspace>\n      </Layout>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}